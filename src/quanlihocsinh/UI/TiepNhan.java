/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlihocsinh.UI;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import quanlihocsinh.Obj.CheckDate;

/**
 *
 * @author DELL
 */
public class TiepNhan extends javax.swing.JPanel {

    /**
     * Creates new form TiepNhan
     */
    public TiepNhan() {
        initComponents();
        for(int i = 0; i < 31; i++)
            d_birthdayField.addItem(Integer.toString(i + 1));
        for(int i = 0; i < 12; i++)
            m_birthdayField.addItem(Integer.toString(i + 1));
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        sexField = new javax.swing.JComboBox<>();
        emailField = new javax.swing.JTextField();
        d_birthdayField = new javax.swing.JComboBox<>();
        m_birthdayField = new javax.swing.JComboBox<>();
        y_birthdayField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Họ và tên:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(jLabel1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Ngày sinh:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Giới tính:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Địa chỉ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Email:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        add(jLabel5, gridBagConstraints);

        nameField.setColumns(20);
        nameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameField.setForeground(new java.awt.Color(0, 0, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        add(nameField, gridBagConstraints);

        addressField.setColumns(20);
        addressField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addressField.setForeground(new java.awt.Color(0, 0, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        add(addressField, gridBagConstraints);

        sexField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sexField.setForeground(new java.awt.Color(0, 0, 255));
        sexField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nam", "Nữ" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 170;
        add(sexField, gridBagConstraints);

        emailField.setColumns(20);
        emailField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        emailField.setForeground(new java.awt.Color(0, 0, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        add(emailField, gridBagConstraints);

        d_birthdayField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        d_birthdayField.setForeground(new java.awt.Color(0, 0, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(d_birthdayField, gridBagConstraints);

        m_birthdayField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        m_birthdayField.setForeground(new java.awt.Color(0, 0, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(m_birthdayField, gridBagConstraints);

        y_birthdayField.setColumns(7);
        y_birthdayField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        y_birthdayField.setForeground(new java.awt.Color(0, 0, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(y_birthdayField, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Mã học sinh:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 10);
        add(jLabel6, gridBagConstraints);

        idField.setEditable(false);
        idField.setColumns(20);
        idField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        add(idField, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Tiếp Nhận Học Sinh");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        add(jLabel7, gridBagConstraints);

        addButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addButton.setText("Thêm Học Sinh");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);
        add(addButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void initData() {
        String studentID = generateId();
        idField.setText(studentID);
        
        nameField.setText("");
        
        d_birthdayField.setSelectedIndex(0);
        m_birthdayField.setSelectedIndex(0);
        y_birthdayField.setText("");
        
        sexField.setSelectedIndex(0);
        addressField.setText("");
        emailField.setText("");
    }
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        
        if(nameField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Hãy điền họ tên!");
            return;
        }
        
        if(y_birthdayField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Hãy điền năm sinh!");
            return;
        }
        
        if(addressField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Hãy điền địa chỉ!");
            return;
        }
        
        if(emailField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Hãy điền email!");
            return;
        }
        
        int d = d_birthdayField.getSelectedIndex() + 1;
        int m = m_birthdayField.getSelectedIndex() + 1;
        int y = Integer.parseInt(y_birthdayField.getText());
        
        if(!CheckDate.checkValidDate(d, m, y)) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ!");
            return;
        }

        String name = nameField.getText();
        if(name.length() > 40) {
            JOptionPane.showMessageDialog(this, "Chiều dài tối đa của họ tên là 40!");
            System.out.println("Chieu dai ten: " + name.length());
            return;
        }
        
        try {
            String id = idField.getText();
            int sex = sexField.getSelectedIndex();
            String address = addressField.getText();
            String email = emailField.getText();
            
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            // kiem tra gioi han ve tuoi
            String[] checkBirthDayLim = CheckDate.checkBirthdayLimit(y, statement).split(",");
            if(checkBirthDayLim[2].equals("false")) {
                JOptionPane.showMessageDialog(
                        this,
                        "Tuổi học sinh phải từ " + checkBirthDayLim[0] + " đến " + checkBirthDayLim[1]
                );
                connection.close();
                return;
            }
            
            // tao ngay sinh
            Date date = new GregorianCalendar(y, m - 1, d).getTime();
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String birthday = df.format(date);
            
            // them hoc sinh vao bang HOCSINH, DIEMTRUNGBINH
            statement.executeUpdate(
                    "INSERT INTO HOCSINH(MaHocSinh, HoVaTen, GioiTinh, NgaySinh, DiaChi, Email)"
                    + " VALUES('" + id + "', N'" + name + "', " + sex + ", '" + birthday + "', N'"
                    + address + "', '" + email + "');"
            );
            
            // them hoc sinh vao bang BANGDIEMMON
            ResultSet rs = statement.executeQuery("SELECT MaMonHoc FROM MONHOC");
            ArrayList<String> subjectsID = new ArrayList<>();
            while(rs.next())
                subjectsID.add(rs.getString(1));
            rs.close();
            
            for(int i = 0; i < subjectsID.size(); i++)
                for(int j = 1; j <= 2; j++)
                    statement.executeUpdate("INSERT INTO BANGDIEMMON(MaMonHoc, MaHocSinh, HocKi)"
                        + " VALUES('" + subjectsID.get(i) + "', '" + id + "', " + j + ")"
                    );
            
            connection.close();
            
            JOptionPane.showMessageDialog(this, "Đã thêm thành công học sinh " + id);
            initData(); // reset bieu mau de dien hoc sinh moi
            
        } catch (SQLException ex) {
            Logger.getLogger(TiepNhan.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra, hãy kiểm tra và thử lại!");
            Main.sqlConnection.closeAllConnection();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TiepNhan.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
           
    }//GEN-LAST:event_addButtonActionPerformed
    
    // phat sinh ma hoc sinh moi
    private String generateId() {
        String result = "";
        try {
            Connection connection = Main.sqlConnection.getConnection();
            ResultSet rs = connection.createStatement().executeQuery(
                    "SELECT MaHocSinh FROM HOCSINH ORDER BY(MaHocSinh)");
            rs.last();
            
            String newID; // id hoc sinh moi
            if(rs.getRow() < 1) // chua co hoc sinh nao
                newID = "0";
            else {
                // lay id lon nhat trong he thong
                String maxID = rs.getString(1).substring(2);
                newID = Integer.toString(Integer.parseInt(maxID) + 1);
            }
            
            // phat sinh ma hoc sinh theo cu phap: HS + id, voi id gom 6 chu so.
            result = "HS";
            for(int i = newID.length(); i < 6; i++)
                result += "0";
            result += newID;
            
            rs.close();
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(TiepNhan.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressField;
    private javax.swing.JComboBox<String> d_birthdayField;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JComboBox<String> m_birthdayField;
    private javax.swing.JTextField nameField;
    private javax.swing.JComboBox<String> sexField;
    private javax.swing.JTextField y_birthdayField;
    // End of variables declaration//GEN-END:variables
}
