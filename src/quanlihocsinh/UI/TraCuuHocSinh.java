/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlihocsinh.UI;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import quanlihocsinh.Obj.Student;
import quanlihocsinh.Obj.tracuuhocsinh.StudentSearchTableModel;

/**
 *
 * @author DELL
 */
public class TraCuuHocSinh extends javax.swing.JPanel {

    /**
     * Creates new form TraCuuHocSinh
     */
    private static ArrayList<Student> students = new ArrayList<>();
    private static StudentSearchTableModel tableModel;
    
    public TraCuuHocSinh() {
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultTable = new javax.swing.JTable();
        gradeComboBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        classComboBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        sexComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        yearOfBirthdayField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        studentInfoPanel = new quanlihocsinh.UI.TraCuuChiTiet();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Họ Tên:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Tra cứu học sinh");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Khối:");

        nameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameField.setForeground(new java.awt.Color(0, 0, 255));

        searchResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Học Sinh", "Họ Tên", "Lớp", "TB Học Kì 1", "TB Học Kì 2"
            }
        ));
        jScrollPane1.setViewportView(searchResultTable);

        gradeComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        gradeComboBox.setForeground(new java.awt.Color(0, 0, 255));
        gradeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));
        gradeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                gradeComboBoxItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Lớp:");

        classComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        classComboBox.setForeground(new java.awt.Color(0, 0, 255));
        classComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Giới tính:");

        sexComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        sexComboBox.setForeground(new java.awt.Color(0, 0, 255));
        sexComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Nam", "Nữ" }));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Năm sinh:");

        yearOfBirthdayField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        yearOfBirthdayField.setForeground(new java.awt.Color(0, 0, 255));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Địa Chỉ:");

        addressField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addressField.setForeground(new java.awt.Color(0, 0, 255));

        searchButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        searchButton.setText("Tìm Kiếm");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(184, 184, 184)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(searchButton))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(studentInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 669, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(42, 42, 42)
                        .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(22, 22, 22)
                            .addComponent(gradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(22, 22, 22)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(sexComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(yearOfBirthdayField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sexComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearOfBirthdayField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel7))
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(searchButton)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(studentInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void initData() {
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            // hien thi danh sach khoi
            gradeComboBox.removeAllItems();
            gradeComboBox.addItem("Tất cả");
            ResultSet rs = statement.executeQuery("SELECT KhoiLop FROM KHOI ORDER BY(KhoiLop)");
            while(rs.next())
                gradeComboBox.addItem(rs.getString(1));
            rs.close();
            connection.close();
            
            studentInfoPanel.setVisible(false);
            addStudentSelectionListener(); // lang nghe su kien chon dong du lieu tren bang
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(LapDanhSach.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String sql = createSQLSearch(); // cau lenh sql
        System.out.println(sql);
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            ResultSet rs = statement.executeQuery(sql);
            students.clear();
            
            // lay danh sach hoc sinh tim duoc
            while(rs.next()) {
                Student student = new Student(
                        rs.getString("MaHocSinh"),
                        rs.getString("HoVaTen"),
                        rs.getInt("GioiTinh"),
                        rs.getString("NgaySinh"),
                        rs.getString("DiaChi"),
                        rs.getString("Email"),
                        rs.getInt("KhoiLop"),
                        rs.getString("TenLop"),
                        rs.getFloat("DTBHocKi1"),
                        rs.getFloat("DTBHocKi2")
                );
                students.add(student);
            }
            rs.close();
            connection.close();
            
            // hien thi danh sach hoc sinh tim duoc
            tableModel = new StudentSearchTableModel(students);
            searchResultTable.setModel(tableModel);
            
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(TraCuuHocSinh.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void gradeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_gradeComboBoxItemStateChanged
        if(evt.getStateChange() == 2) // item deselected
            return;
        if(gradeComboBox.getSelectedItem().toString().equals("Tất cả")) {
            // chon tat ca khoi
            classComboBox.removeAllItems();
            classComboBox.addItem("Tất cả"); // neu chon tat ca khoi -> chon tat ca lop
            return;
        }
        try {
            Connection connection = Main.sqlConnection.getConnection();
            loadClassSelection(
                    gradeComboBox.getSelectedItem().toString(),
                    connection.createStatement()
            );
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(LapDanhSach.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }//GEN-LAST:event_gradeComboBoxItemStateChanged

    private void addStudentSelectionListener() {
        searchResultTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(e.getValueIsAdjusting()) // chi thuc hien thao tac 1 lan
                    return;
                // hien thi thong tin chi tiet cua hoc sinh da chon
                int selectedRow = searchResultTable.getSelectedRow();
                if(selectedRow < 0 || selectedRow >= searchResultTable.getRowCount())
                    return;
                loadStudentInfo(selectedRow);
            }
        });
    }
    
    private void loadClassSelection(String grade, Statement statement) throws SQLException {
        classComboBox.removeAllItems();
        classComboBox.addItem("Tất cả");
        ResultSet rs = statement.executeQuery(
                "SELECT TenLop FROM LOPHOC WHERE KhoiLop=" + grade + " ORDER BY(TenLop)");
        while(rs.next())
            classComboBox.addItem(rs.getString(1));
        rs.close();
    }
    
    private void loadStudentInfo(int index) {
        studentInfoPanel.setVisible(true);
        Student student = students.get(index); // lay ra hoc sinh da chon
        
        // hien thi cac thong tin cua hoc sinh nay vao bang chi tiet
        studentInfoPanel.setStudent(student);
    }
    
    private String createSQLSearch() {
        String name = nameField.getText();
        String grade = gradeComboBox.getSelectedItem().toString();
        String className = classComboBox.getSelectedItem().toString();
        int sex = sexComboBox.getSelectedIndex();
        String yearOfBirthday = yearOfBirthdayField.getText();
        String address = addressField.getText();
        
        String sql = "SELECT MaHocSinh, HoVaTen, KhoiLop, TenLop, GioiTinh, NgaySinh,"
                + " DiaChi, Email, DTBHocKi1, DTBHocKi2 FROM HOCSINH, LOPHOC";
        String whereClause = " HOCSINH.MaLop=LOPHOC.MaLop"; // menh de where
        
        if(!name.equals(""))
            whereClause = whereClause + " AND HoVaTen LIKE '%" + name + "%'";
        
        if(!grade.equals("Tất cả")) {
            int intValue = Integer.parseInt(grade);
            whereClause = whereClause + " AND KhoiLop=" + intValue;
        }
        
        if(!className.equals("Tất cả"))
            whereClause = whereClause + " AND TenLop='" + className + "'";
        
        if(sex > 0)
            whereClause = whereClause + " AND GioiTinh=" + (sex - 1);
        
        if(!yearOfBirthday.equals(""))
            whereClause = whereClause + " AND YEAR(NgaySinh)=" + Integer.parseInt(yearOfBirthday);
        
        if(!address.equals(""))
            whereClause = whereClause + " AND DiaChi LIKE '%" + address + "%'";
        
        sql = sql + " WHERE" + whereClause + " ORDER BY HoVaTen";
        return sql;
    }
    
    public static void deleteSelectedStudent() {
        int index = searchResultTable.getSelectedRow();
        searchResultTable.clearSelection();
        if(index >= students.size() || index < 0)
            return;
        students.remove(index);
        tableModel = new StudentSearchTableModel(students);
        searchResultTable.setModel(tableModel);
    }
    
    public static void reloadTable() {
        tableModel = new StudentSearchTableModel(students);
        searchResultTable.setModel(tableModel);
    }
    
    // cai dat viec cho phep nguoi dung thay doi du lieu
    public void setEditable() {
        studentInfoPanel.setEditable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JComboBox<String> classComboBox;
    private javax.swing.JComboBox<String> gradeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton searchButton;
    private static javax.swing.JTable searchResultTable;
    private javax.swing.JComboBox<String> sexComboBox;
    private quanlihocsinh.UI.TraCuuChiTiet studentInfoPanel;
    private javax.swing.JTextField yearOfBirthdayField;
    // End of variables declaration//GEN-END:variables
}
