/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlihocsinh.UI.nhanvien;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import quanlihocsinh.UI.Main;

/**
 *
 * @author DELL
 */
public class QuanLiNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form QuanLiNhanVien
     */
    private static DefaultTableModel tableModel;
    
    public QuanLiNhanVien() {
        initComponents();
        initData();
        addItemChange(); // them su kien chon dong tren bang
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        changeInfoButton = new javax.swing.JButton();
        editPanel = new javax.swing.JPanel();
        themNhanVien = new quanlihocsinh.UI.nhanvien.ThemNhanVien();
        suaThongTinNhanvien = new quanlihocsinh.UI.nhanvien.SuaThongTinNhanvien();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Quản Lí Nhân Viên");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã nhân viên", "Tên nhân viên", "Chức vụ", "Tên đăng nhập"
            }
        ));
        jScrollPane1.setViewportView(table);

        addButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        addButton.setText("Thêm");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        deleteButton.setText("Xóa");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        changeInfoButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        changeInfoButton.setText("Sửa");
        changeInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeInfoButtonActionPerformed(evt);
            }
        });

        editPanel.setLayout(new java.awt.CardLayout());
        editPanel.add(themNhanVien, "cardThemNhanVien");
        editPanel.add(suaThongTinNhanvien, "cardSuaThongTinNhanVien");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(deleteButton)
                    .addComponent(changeInfoButton))
                .addGap(18, 18, 18)
                .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = table.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn nhân viên để xóa!");
            return;
        }
        
        if(table.getValueAt(selectedRow, 1).equals(Main.user.getID())) {
            JOptionPane.showMessageDialog(this, "Bạn không thể xóa tài khoản của chính mình!");
            return;
        }
        
        String staffID = table.getValueAt(selectedRow, 1).toString();
        String staffName = table.getValueAt(selectedRow, 2).toString();
        
        int reply = JOptionPane.showConfirmDialog(this, 
                "Bạn có chắc chắn muốn xóa nhân viên \"" + staffName + "\" không?\n Các lớp học do nhân viên này giảng dạy cũng sẽ bị xóa!",
                "Xóa nhân viên",
                JOptionPane.YES_NO_OPTION
        );
        if(reply == JOptionPane.YES_OPTION) {
            try {
                Connection connection = Main.sqlConnection.getConnection();
                Statement statement = connection.createStatement();
                
                // xoa cac mon hoc ma nhan vien giang day
                statement.executeUpdate(
                        "DELETE FROM GIANGDAY WHERE MaGiaoVien='" + staffID + "'");
                
                // xoa nhan vien
                statement.executeUpdate(
                        "DELETE FROM NHANVIEN WHERE MaNhanVien='" + staffID + "'");
                
                showOnTable(statement);
                connection.close();
                JOptionPane.showMessageDialog(this, "Xóa nhân viên \"" + staffName + "\" thành công!");
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(QuanLiNhanVien.class.getName()).log(Level.SEVERE, null, ex);
                Main.sqlConnection.closeAllConnection();
            }
            
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        editPanel.setVisible(true);
        ((CardLayout)editPanel.getLayout()).show(editPanel, "cardThemNhanVien");
    }//GEN-LAST:event_addButtonActionPerformed

    private void changeInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeInfoButtonActionPerformed
        if(table.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn nhân viên!");
            return;
        }
        
        editPanel.setVisible(true);
        ((CardLayout)editPanel.getLayout()).show(editPanel, "cardSuaThongTinNhanVien");
        suaThongTinNhanvien.loadData();
    }//GEN-LAST:event_changeInfoButtonActionPerformed

    private void addItemChange() {
        table.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                 editPanel.setVisible(false);
            }
        });
    }
    
    private void initData() {
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            showOnTable(statement);
            
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(QuanLiNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }
    
    public static void showOnTable(Statement statement) throws SQLException {
        editPanel.setVisible(false);
        ResultSet rs = statement.executeQuery(
                    "SELECT NV.MaNhanVien, TenNhanVien, TenChucVu, TenDangNhap "
                    + " FROM NHANVIEN NV JOIN CHUCVU CV ON NV.MaChucVu=CV.MaChucVu"
        );
        tableModel = new DefaultTableModel(
                new String[] {"STT", "Mã nhân viên", "Tên nhân viên", "Chức vụ", "Tên tài khoản"},
                6
        ) {
            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        tableModel.setRowCount(0);
        int i = 0;
        while(rs.next()) {
            i++;
            Vector<String> rowData = new Vector<>();
            rowData.addElement(Integer.toString(i));
            rowData.addElement(rs.getString(1));
            rowData.addElement(rs.getString(2));
            rowData.addElement(rs.getString(3));
            rowData.addElement(rs.getString(4));
            tableModel.addRow(rowData);
        }
        table.setModel(tableModel);
        rs.close();
    }
    
    public static String getSelectedStaffID() {
        if(table.getSelectedRow() < 0)
            return "";
        String id = table.getValueAt(table.getSelectedRow(), 1).toString();
        return id;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton changeInfoButton;
    private javax.swing.JButton deleteButton;
    private static javax.swing.JPanel editPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private quanlihocsinh.UI.nhanvien.SuaThongTinNhanvien suaThongTinNhanvien;
    private static javax.swing.JTable table;
    private quanlihocsinh.UI.nhanvien.ThemNhanVien themNhanVien;
    // End of variables declaration//GEN-END:variables
}
