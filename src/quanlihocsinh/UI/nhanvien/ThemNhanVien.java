/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlihocsinh.UI.nhanvien;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import quanlihocsinh.Obj.User;
import quanlihocsinh.UI.Main;

/**
 *
 * @author DELL
 */
public class ThemNhanVien extends javax.swing.JPanel {

    /**
     * Creates new form ThemNhanVien
     */
    
    public ThemNhanVien() {
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        typeField = new javax.swing.JComboBox<>();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        submitButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Mã nhân viên:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Tên nhân viên:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Chức Vụ:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Tên đăng nhập:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Mật khẩu:");

        idField.setEditable(false);
        idField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        idField.setForeground(new java.awt.Color(0, 51, 255));

        nameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameField.setForeground(new java.awt.Color(0, 51, 255));

        typeField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        typeField.setForeground(new java.awt.Color(0, 51, 255));

        usernameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        usernameField.setForeground(new java.awt.Color(0, 0, 255));

        passwordField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        passwordField.setForeground(new java.awt.Color(0, 0, 255));

        submitButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        submitButton.setText("Thêm Nhân Viên");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idField)
                    .addComponent(nameField)
                    .addComponent(typeField, 0, 177, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if(!checkForm()) // chua nhap day du thong tin
            return;
        
        String id = idField.getText();
        String name = nameField.getText();
        String type = typeField.getSelectedItem().toString();
        String username = usernameField.getText();
        String password = User.getMD5(
                new String(passwordField.getPassword())
        );
        
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            // lay ma chuc vu
            ResultSet rs = statement.executeQuery(
                    "SELECT MaChucVu FROM CHUCVU WHERE TenChucVu='" + type + "'");
            rs.first();
            String typeID = rs.getString(1);
            rs.close();
            
            // them nhan vien
            statement.executeUpdate("INSERT INTO NHANVIEN VALUES('"
                    + id + "', '" + name + "', '" + typeID + "', '"
                    + username + "', '" + password + "')"
            );
            
            QuanLiNhanVien.showOnTable(statement);
            connection.close();
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ThemNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
        QuanLiNhanVien.updateSystem();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void initData() {
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            // hien thi ma nhan vien
            String newID = generateID(statement);
            idField.setText(newID);
            
            // hien thi danh sach chuc vu
            ResultSet rs = statement.executeQuery("SELECT TenChucVu FROM CHUCVU");
            while(rs.next())
                typeField.addItem(rs.getString(1));
            rs.close();
                
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(ThemNhanVien.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }
    
    private String generateID(Statement statement) throws SQLException {
        ResultSet rs = statement.executeQuery(
                "SELECT MaNhanVien FROM NHANVIEN ORDER BY MaNhanVien");
        rs.last();
        String maxID = rs.getString(1).substring(2);
        rs.close();
        
        int nextID = Integer.parseInt(maxID) + 1;
        String result = Integer.toString(nextID);
        for(int i = result.length(); i < 3; i++)
            result = "0" + result;
        
        result = "NV" + result;
        return result;
    }
    
    private boolean checkForm() {
        if(nameField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên nhân viên!");
            return false;
        }
        
        if(usernameField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên tài khoản!");
            return false;
        }
        
        if(new String(passwordField.getPassword()).equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập mật khẩu!");
            return false;
        }
        
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nameField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton submitButton;
    private javax.swing.JComboBox<String> typeField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
