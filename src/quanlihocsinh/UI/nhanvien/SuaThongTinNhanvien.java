/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlihocsinh.UI.nhanvien;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import quanlihocsinh.Obj.User;
import quanlihocsinh.UI.Main;

/**
 *
 * @author DELL
 */

public class SuaThongTinNhanvien extends javax.swing.JPanel {

    /**
     * Creates new form SuaThongTinNhanvien
     */
    
    public SuaThongTinNhanvien() {
        initComponents();
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            // lay danh sach chuc vu
            ResultSet rs = statement.executeQuery("SELECT TenChucVu FROM CHUCVU");
            while(rs.next())
                typeField.addItem(rs.getString(1));
            
            rs.close();
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(SuaThongTinNhanvien.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameField = new javax.swing.JTextField();
        typeField = new javax.swing.JComboBox<>();
        usernameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JPasswordField();
        saveButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();

        nameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nameField.setForeground(new java.awt.Color(0, 51, 255));

        typeField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        typeField.setForeground(new java.awt.Color(0, 51, 255));

        usernameField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        usernameField.setForeground(new java.awt.Color(0, 0, 255));

        passwordField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        passwordField.setForeground(new java.awt.Color(0, 0, 255));
        passwordField.setToolTipText("để trống nếu không thay đổi");

        saveButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        saveButton.setText("Lưu");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Mã nhân viên:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Tên nhân viên:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Chức Vụ:");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Tên đăng nhập:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Mật khẩu:");

        idField.setEditable(false);
        idField.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        idField.setForeground(new java.awt.Color(0, 51, 255));

        cancelButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cancelButton.setText("Hủy");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idField)
                    .addComponent(nameField)
                    .addComponent(typeField, 0, 177, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(typeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String id = idField.getText();
        String name = nameField.getText();
        String staffType = typeField.getSelectedItem().toString();
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());
        
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            if(!checkForm(statement)) {
                connection.close();
                return;
            }
            
            // lay ma chuc vu
            ResultSet rs = statement.executeQuery(
                    "SELECT MaChucVu FROM CHUCVU WHERE TenChucVu='" + staffType + "'");
            rs.first();
            String staffTyeID = rs.getString(1);
            rs.close();

            // ma hoa mat khau, tao chuoi doi mat khau cho truy van sql
            String changePassword = "";
            if(!password.equals(""))
                changePassword = ", MatKhau='" + User.getMD5(password) + "'";

            // tao cau truy van
            String sql = "UPDATE NHANVIEN SET TenNhanVien='" + name + "',"
                    + " MaChucVu='" + staffTyeID + "',"
                    + " TenDangNhap='" + username + "'"
                    + changePassword
                    + "WHERE MaNhanVien='" + id + "'";

            statement.executeUpdate(sql);
            QuanLiNhanVien.showOnTable(statement);
            connection.close();
            JOptionPane.showMessageDialog(this, "Đã lưu thành công!");
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(SuaThongTinNhanvien.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!");
        }
        QuanLiNhanVien.updateSystem();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        loadData();
    }//GEN-LAST:event_cancelButtonActionPerformed

    public void loadData() {
        String id = QuanLiNhanVien.getSelectedStaffID();
        if(id.equals(""))
            return;
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            ResultSet rs = statement.executeQuery(
                    "SELECT NV.MaNhanVien, TenNhanVien, TenChucVu, TenDangNhap"
                    + " FROM NHANVIEN NV JOIN CHUCVU CV ON NV.MaChucVu=CV.MaChucVu"
                    + " WHERE NV.MaNhanVien='" + id + "'"
            );
            
            rs.first();
            idField.setText(rs.getString(1));
            nameField.setText(rs.getString(2));
            
            String staffType = rs.getString(3);
            for(int i = 0; i < typeField.getItemCount(); i++)
                if(typeField.getItemAt(i).equals(staffType)) {
                    typeField.setSelectedIndex(i);
                    break;
                }
            
            usernameField.setText(rs.getString(4));
            passwordField.setText("");
            
            rs.close();
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(SuaThongTinNhanvien.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }
    
    private boolean checkForm(Statement statement) throws SQLException {
        String id = idField.getText();
        String name = nameField.getText();
        String staffType = typeField.getSelectedItem().toString();
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());
        
        if(name.equals("")) {
            JOptionPane.showMessageDialog(this, "Tên nhân viên không được để trống!");
            return false;
        }
        
        if(username.equals("")) {
            JOptionPane.showMessageDialog(this, "Tên tài khoản không được để trống!");
            return false;
        }
        
        // kiem tra xem ten tai khoan da ton tai chua
        ResultSet rs = statement.executeQuery(
                "SELECT * FROM NHANVIEN WHERE TenDangNhap='" + username + "'");
        rs.last();
        int row = rs.getRow();
        rs.close();
        
        if(row > 0) {
            JOptionPane.showMessageDialog(this, "Tên tài khoản đã được sử dụng! Vui lòng chọn tên khác!");
            return false;
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nameField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> typeField;
    private javax.swing.JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
