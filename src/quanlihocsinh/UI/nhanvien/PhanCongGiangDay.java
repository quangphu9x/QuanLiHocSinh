/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quanlihocsinh.UI.nhanvien;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import quanlihocsinh.UI.Main;

/**
 *
 * @author DELL
 */
public class PhanCongGiangDay extends javax.swing.JPanel {

    /**
     * Creates new form PhanCongGiangDay
     */
    private JComboBox<String> teachersComboBox;
    private PhanCongTableModel tableModel;
    
    public PhanCongGiangDay() {
        initComponents();
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        gradeComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        classComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        semesterComboBox = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Phân Công Giảng Dạy");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Khối:");

        gradeComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        gradeComboBox.setForeground(new java.awt.Color(0, 0, 255));
        gradeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                gradeComboBoxItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Lớp:");

        classComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        classComboBox.setForeground(new java.awt.Color(0, 0, 255));
        classComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                classComboBoxItemStateChanged(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã môn học", "Tên môn học", "Giáo viên"
            }
        ));
        jScrollPane1.setViewportView(table);

        saveButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        saveButton.setText("Lưu");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cancelButton.setText("Hủy");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Học kì:");

        semesterComboBox.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        semesterComboBox.setForeground(new java.awt.Color(0, 0, 255));
        semesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        semesterComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                semesterComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelButton)
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(144, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(gradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(classComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void gradeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_gradeComboBoxItemStateChanged
        if(evt.getStateChange() == 2) // item deselected
            return;
        String grade = gradeComboBox.getSelectedItem().toString();
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            loadClassSelection(grade, statement);
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PhanCongGiangDay.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }//GEN-LAST:event_gradeComboBoxItemStateChanged

    private void classComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_classComboBoxItemStateChanged
        if(evt.getStateChange() == 2) // item deselected
            return;
        loadTableData();
    }//GEN-LAST:event_classComboBoxItemStateChanged

    private void semesterComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_semesterComboBoxItemStateChanged
        if(evt.getStateChange() == 2) // item deselected
            return;
        loadTableData();
    }//GEN-LAST:event_semesterComboBoxItemStateChanged

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String semester = semesterComboBox.getSelectedItem().toString();
        String className = classComboBox.getSelectedItem().toString();
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
        
            // lay ma lop
            ResultSet rs = statement.executeQuery(
                    "SELECT MaLop FROM LOPHOC WHERE TenLop='" + className + "'");
            rs.first();
            String classID = rs.getString(1);
            
            // luu tung dong du lieu
            for(int i = 0; i < table.getRowCount(); i++) {
                String subjectID = table.getValueAt(i, 1).toString();
                
                String teacher = table.getValueAt(i, 3).toString();
                String teacherID = "";
                if(!teacher.equals("<Chọn>"))
                    teacherID = teacher.split(" - ")[0];
                
                // kiem tra xem dong du lieu da ton tai chua, neu chua thi them moi, neu co roi thi cap nhat
                rs = statement.executeQuery("SELECT * FROM GIANGDAY"
                        + " WHERE MaMonHoc='" + subjectID + "' AND"
                        + " MaLop='" + classID + "' AND"
                        + " HocKi=" + semester
                );
                rs.last();
                if(rs.getRow() > 0) { // lop hoc da duoc phan cong giao vien
                    if(teacherID.equals("")) {
                        // xoa giao vien
                        statement.executeUpdate("DELETE FROM GIANGDAY"
                                + " WHERE MaMonHoc='" + subjectID + "' AND"
                                + " MaLop='" + classID + "' AND"
                                + " HocKi=" + semester
                        );
                    } else
                        statement.executeUpdate(
                                "UPDATE GIANGDAY SET MaGiaoVien='" + teacherID + "'"
                                + " WHERE MaMonHoc='" + subjectID + "' AND"
                                + " MaLop='" + classID + "' AND"
                                + " HocKi=" + semester
                        );
                } else { // lop hoc chua duoc xep giao vien
                    if(!teacherID.equals(""))
                        statement.executeUpdate(
                                "INSERT INTO GIANGDAY VALUES('" + teacherID + "', '"
                                + subjectID + "', '" + classID + "', " + semester + ")"
                        );
                }
            }
            
            rs.close();
            connection.close();
            JOptionPane.showMessageDialog(this, "Đã lưu thành công!");
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PhanCongGiangDay.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra!");
        }
        
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        loadTableData();
    }//GEN-LAST:event_cancelButtonActionPerformed

    public void initData() {
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            // lay danh sach khoi
            gradeComboBox.removeAllItems();
            ResultSet rs = statement.executeQuery("SELECT KhoiLop FROM KHOI");
            while(rs.next())
                gradeComboBox.addItem(rs.getString(1));
            
            rs.close();
            
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PhanCongGiangDay.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }
    
    private void loadClassSelection(String grade, Statement statement) throws SQLException {
        ResultSet rs = statement.executeQuery(
                "SELECT TenLop FROM LOPHOC WHERE KhoiLop=" + grade);
        classComboBox.removeAllItems();
        while(rs.next())
            classComboBox.addItem(rs.getString(1));
        rs.close();
    }
    
    public void loadTableData() {
        try {
            Connection connection = Main.sqlConnection.getConnection();
            Statement statement = connection.createStatement();
            
            String className = classComboBox.getSelectedItem().toString();
            String semester = semesterComboBox.getSelectedItem().toString();
            
            // lay ma lop
            ResultSet rs = statement.executeQuery(
                    "SELECT MaLop FROM LOPHOC WHERE TenLop='" + className + "'");
            rs.first();
            String classID = rs.getString(1);
            
            // lay danh sach mon hoc
            String sql = "SELECT MH.MaMonHoc, TenMonHoc, MaNhanVien, TenNhanVien\n"
                    + "FROM MONHOC MH LEFT JOIN ("
                        + "SELECT MaMonHoc, MaNhanVien, TenNhanVien"
                        + " FROM GIANGDAY GD JOIN NHANVIEN NV ON GD.MaGiaoVien=NV.MaNhanVien"
                        + " WHERE MaLop='" + classID + "' AND HocKi=" + semester + ") AS TB\n"
                    +  "ON TB.MaMonHoc=MH.MaMonHoc";
            rs = statement.executeQuery(sql);
            
            // hien thi vao bang
            tableModel = new PhanCongTableModel();
            int i = 0;
            while(rs.next()) {
                i++;
                String subjectID = rs.getString(1);
                String subjectName = rs.getString(2);
                String teacherID = rs.getString(3);
                String teacherName = rs.getString(4);
                
                Vector<String> rowData = new Vector();
                rowData.addElement(Integer.toString(i));
                rowData.addElement(subjectID);
                rowData.addElement(subjectName);
                if(teacherID == null || teacherID.equals(""))
                    rowData.addElement("<Chọn>");
                else
                    rowData.addElement(teacherID + " - " + teacherName);
                
                tableModel.addRow(rowData);
            }
            
            rs.close();

            table.setModel(tableModel);
            // su dung combobox de chon giao vien
            loadTeacherList(statement);
            TableColumn teacherColumn = table.getColumnModel().getColumn(3);
            teacherColumn.setCellEditor(new DefaultCellEditor(teachersComboBox));
            
            connection.close();
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(PhanCongGiangDay.class.getName()).log(Level.SEVERE, null, ex);
            Main.sqlConnection.closeAllConnection();
        }
    }
    
    private void loadTeacherList(Statement statement)throws SQLException {
        teachersComboBox = new JComboBox<>();
        teachersComboBox.addItem("<Chọn>");
        ResultSet rs = statement.executeQuery("SELECT MaNhanVien, TenNhanVien FROM NHANVIEN");
        while(rs.next())
            teachersComboBox.addItem(rs.getString(1) + " - " + rs.getString(2));
        rs.close();
    }
    
    private static class PhanCongTableModel extends DefaultTableModel {
        private final String[] headers;
        
        public PhanCongTableModel() {
            headers = new String[] {"STT", "Mã môn học", "Tên môn học", "Giáo viên"};
            setRowCount(0);
        }
        
        @Override
        public boolean isCellEditable(int row, int col) {
            return col == 3;
        }
        
        @Override
        public int getColumnCount() {
            return headers.length;
        }
        
        @Override
        public String getColumnName(int col) {
            if(col >= getColumnCount())
                return "";
            else
                return headers[col];
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> classComboBox;
    private javax.swing.JComboBox<String> gradeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> semesterComboBox;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
